
services:
  numarquez:
    build:
      context: ../  
      dockerfile: ./Dockerfile
    container_name: marquez-api
    ports:                  
      - "5000:5000"
      - "5001:5001"
    volumes:
      - ./wait-for-it.sh:/usr/src/app/wait-for-it.sh
    environment:
      - DB_HOST=prod-marquez-cluster-aurora-postgresql.cluster-ro-copdpdasx0pj.us-east-1.rds.amazonaws.com
      - DB_PORT=5432
      - DB_USER=marquez_svc
      - DB_PASSWORD=f74f4f1f27c456c8698T78!3f
    # depends_on:
    #   - db
    entrypoint: [
      "./wait-for-it.sh",
      "prod-marquez-cluster-aurora-postgresql.cluster-ro-copdpdasx0pj.us-east-1.rds.amazonaws.com:5432",
      "--",
      "./entrypoint.sh"
    ]
    networks:
      - marquez-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  web:
    build:
      context: ../web 
      dockerfile: ../web/Dockerfile
    container_name: marquez-web
    environment:
      - MARQUEZ_HOST=marquez-api
      - MARQUEZ_PORT=5000
      - REDIS_HOST=marquez-redis  
      - REDIS_PORT=6379  
      - WEB_PORT=3000 
      - KAFKA_LOADBALANCER_DNS=kafka
      - KAFKA_PORT=9092
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    depends_on:
      - numarquez
      - redis
      - zookeeper
      - kafka
    networks:
      - marquez-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # db:
  #   image: postgres:12.1
  #   container_name: marquez-db
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #     - MARQUEZ_DB=marquez
  #     - MARQUEZ_USER=marquez
  #     - MARQUEZ_PASSWORD=marquez

  redis:
    image: redis:7-alpine
    container_name: marquez-redis
    ports:
      - "6379:6379"
    networks:
      - marquez-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # Optional persistence
    volumes:
      - redis-data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: marquez-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    depends_on:
      - redis
    networks:
      - marquez-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: marquez-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - redis
      - zookeeper
    networks:
      - marquez-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  redis-data:

networks:
  marquez-network:
    driver: bridge